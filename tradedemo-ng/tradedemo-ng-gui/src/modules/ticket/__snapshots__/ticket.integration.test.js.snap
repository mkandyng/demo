// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ticket integration tests should matchSnapshot for mount Ticket component  1`] = `
<Ticket
  enableDemo={false}
  instrument={
    Object {
      "currency": "USD",
      "name": "instrument4",
      "open": 1,
      "price": 1,
      "symbol": "symbol4",
    }
  }
  placeOrder={[Function]}
  updateOrder={[Function]}
>
  <div
    id="ticket"
  >
    <form>
      <LabelInput
        handleOnChange={[Function]}
        label="Symbol"
        name="symbol"
        type="text"
        value="symbol4"
      >
        <p>
          <label>
            Symbol
            :
            <input
              name="symbol"
              onChange={[Function]}
              type="text"
              value="symbol4"
            />
          </label>
        </p>
      </LabelInput>
      <LabelInput
        handleOnChange={[Function]}
        label="Quantity"
        name="quantity"
        step={5}
        type="number"
        value={5}
      >
        <p>
          <label>
            Quantity
            :
            <input
              name="quantity"
              onChange={[Function]}
              step={5}
              type="number"
              value={5}
            />
          </label>
        </p>
      </LabelInput>
      <SelectionDropDown
        handleOnChange={[Function]}
        id="orderType"
        label="Order Type"
        list={
          Array [
            "Market",
            "Limit",
            "Stop",
            "Stop Limit",
          ]
        }
        name="orderType"
        value="Market"
      >
        <p>
          <label>
            Order Type
            :
            <select
              id="orderType"
              name="orderType"
              onChange={[Function]}
              value="Market"
            >
              <option
                id="orderTypeMarket"
                key="orderTypeMarket"
                value="Market"
              >
                Market
              </option>
              <option
                id="orderTypeMarket"
                key="orderTypeLimit"
                value="Market"
              >
                Limit
              </option>
              <option
                id="orderTypeMarket"
                key="orderTypeStop"
                value="Market"
              >
                Stop
              </option>
              <option
                id="orderTypeMarket"
                key="orderTypeStop Limit"
                value="Market"
              >
                Stop Limit
              </option>
            </select>
          </label>
        </p>
      </SelectionDropDown>
      <LabelInput
        handleOnChange={[Function]}
        label="Price"
        name="price"
        step={0.1}
        style={
          Object {
            "opacity": "0.5",
          }
        }
        type="number"
        value="1.00"
      >
        <p
          style={
            Object {
              "opacity": "0.5",
            }
          }
        >
          <label>
            Price
            :
            <input
              name="price"
              onChange={[Function]}
              step={0.1}
              style={
                Object {
                  "opacity": "0.5",
                }
              }
              type="number"
              value="1.00"
            />
          </label>
        </p>
      </LabelInput>
      <SelectionDropDown
        handleOnChange={[Function]}
        id="expiryType"
        label="Expiry Type"
        list={
          Array [
            "Day",
            "GTD",
            "GTC",
            "FOK",
          ]
        }
        name="expiryType"
        value="Day"
      >
        <p>
          <label>
            Expiry Type
            :
            <select
              id="expiryType"
              name="expiryType"
              onChange={[Function]}
              value="Day"
            >
              <option
                id="expiryTypeDay"
                key="expiryTypeDay"
                value="Day"
              >
                Day
              </option>
              <option
                id="expiryTypeDay"
                key="expiryTypeGTD"
                value="Day"
              >
                GTD
              </option>
              <option
                id="expiryTypeDay"
                key="expiryTypeGTC"
                value="Day"
              >
                GTC
              </option>
              <option
                id="expiryTypeDay"
                key="expiryTypeFOK"
                value="Day"
              >
                FOK
              </option>
            </select>
          </label>
        </p>
      </SelectionDropDown>
      <LabelInput
        handleOnChange={[Function]}
        label="Expiry Date"
        name="expiryDate"
        step={0.1}
        style={
          Object {
            "opacity": "0.5",
          }
        }
        type="date"
        value=""
      >
        <p
          style={
            Object {
              "opacity": "0.5",
            }
          }
        >
          <label>
            Expiry Date
            :
            <input
              name="expiryDate"
              onChange={[Function]}
              step={0.1}
              style={
                Object {
                  "opacity": "0.5",
                }
              }
              type="date"
              value=""
            />
          </label>
        </p>
      </LabelInput>
      <LabelTextArea
        handleOnChange={[Function]}
        label="Note"
        maxLength={100}
        name="note"
        value=""
      >
        <p>
          <label>
            Note
            <textarea
              maxLength={100}
              name="note"
              onChange={[Function]}
              value=""
            />
          </label>
        </p>
      </LabelTextArea>
      <div>
        <div
          id="buySell"
        >
          <BuySellButton
            buttonName="Sell"
            containerId="sellButton"
            handleOnClick={[Function]}
            id="sell"
          >
            <div
              id="sellButton"
              onClick={[Function]}
            >
              <label />
              <button
                id="sell"
              >
                Sell
              </button>
            </div>
          </BuySellButton>
          <BuySellButton
            buttonName="Buy"
            containerId="buyButton"
            handleOnClick={[Function]}
            id="buy"
          >
            <div
              id="buyButton"
              onClick={[Function]}
            >
              <label />
              <button
                id="buy"
              >
                Buy
              </button>
            </div>
          </BuySellButton>
        </div>
      </div>
    </form>
  </div>
</Ticket>
`;
